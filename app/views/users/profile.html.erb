<div class="app-profile">
  <div class="mdl-layout mdl-js-layout mdl-layout--fixed-header">
    <header class="mdl-layout__header">
      <div class="mdl-layout__header-row">
        <div class="mdl-layout-spacer"></div>
      <nav class="mdl-navigation hide-cell">
        <div class="material-icons mdl-badge mdl-badge--overlap">settings</div>
        <div class="material-icons mdl-badge mdl-badge--overlap" data-badge="4">notifications_active</div>
        <div class="material-icons mdl-badge mdl-badge--overlap" data-badge="1">account_box</div>
      </nav>
      </div>
    </header>
    <div class="mdl-layout__drawer">
      <span class="mdl-layout-title">Menu</span>
      <nav class="mdl-navigation">
        <a href="#" class="mdl-navigation__link">Perfil</a>
        <a href="#" class="mdl-navigation__link">Notas de Corretagem</a>
      </nav>
    </div>
    <div class="mdl-layout__content">
      <main>
        <div class="mdl-grid">
          <form>
            <div class="mdl-cell mdl-cell--12-col md1-cell--10-col-tablet">
              <ul class="demo-list-three mdl-list">
                <li class="mdl-list__item mdl-list__item--three-line">
                  <span class="mdl-list__item-primary-content">
                    <i class="material-icons mdl-list__item-avatar">person</i>
                    <span>Username</span>
                    <span class="mdl-list__item-text-body">Bryan Cranston played the role of Walter in Breaking Bad. He is also known
                    for playing Hal in Malcom.</span>
                  </span>
                  <span class="mdl-list__item-secondary-content">
                    <a class="mdl-list__item-secondary" href="#"><i class="material-icons">edit</i></a>
                  </span>
                </li>
              </ul>
              <h5 class="subtitle">Dados cadastrais</h5>
              <div class="mdl-textfield mdl-js-textfield fullname-field mdl-textfield--floating-label">
                <%= label_tag :name, 'Nome Completo', class: 'mdl-textfield__label', for: 'name' %><br>
                <%= text_field_tag :name, '', class: 'mdl-textfield__input', type: 'text', id:'profile-fullname' %>
              </div>
              <div class="mdl-textfield mdl-js-textfield username-field mdl-textfield--floating-label">
                <%= label_tag :name, 'Nome de Usuário', class: 'mdl-textfield__label', for: 'name' %><br>
                <%= text_field_tag :name, '', class: 'mdl-textfield__input', type: 'text', id: 'profile-username' %>
              </div>
              <div class="mdl-textfield mdl-js-textfield number-field mdl-textfield--floating-label">
                <%= label_tag :name, 'CPF/CNPJ', class: 'mdl-textfield__label', for: 'number' %><br>
                <%= number_field_tag :name, '', class: 'mdl-textfield__input', type: 'number', id: 'profile-number' %>
              </div>
              <div class="mdl-textfield mdl-js-textfield email-field mdl-textfield--floating-label">
                <%= label_tag :email, 'E-mail', class: 'mdl-textfield__label', for: 'email' %><br>
                <%= email_field_tag :email, '', class: 'mdl-textfield__input', type: 'email', id: 'profile-email' %>
              </div>
               </div>
               <h5 class="subtitle">Alteração de senha</h5>
              <div class="mdl-textfield mdl-js-textfield password-field mdl-textfield--floating-label">
                <%= label_tag :password, 'Senha', class: 'mdl-textfield__label', for: 'password' %><br>
                <%= password_field_tag :password, '', class: 'mdl-textfield__input', type: 'password', id:'profile-password' %>
              </div>
              <div class="mdl-textfield mdl-js-textfield password-field mdl-textfield--floating-label">
                <%= label_tag :password_confirmation, 'Confirmação de senha', class: 'mdl-textfield__label', for: 'password2' %><br>
                <%= password_field_tag :password_confirmation, '', class: 'mdl-textfield__input', type: 'password', id: 'profile-password2'%>
              </div>
              <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                <%= label_tag :name, 'Contas Vinculadas', class: 'mdl-textfield__label' %><br>
              </div>
              <div class="link-account">
                <ul class="demo-list-control mdl-list">
                <li class="mdl-list__item">
                  <span class="mdl-list__item-primary-content">
                    <i class="material-icons  mdl-list__item-avatar">facebook</i>
                    Bob Odenkirk
                  </span>
                  <span class="mdl-list__item-secondary-action">
                    <label class="mdl-switch mdl-js-switch mdl-js-ripple-effect" for="list-switch-1">
                      <input type="checkbox" id="list-switch-1" class="mdl-switch__input" checked />
                    </label>
                  </span>
                </li>
                </ul>
              </div>
              <div class="mdl-textfield mdl-js-textfield field-reset-password mdl-textfield--floating-label">
                <%= label_tag :name, 'Vincular Conta', class: 'mdl-textfield__label' %><br>
              </div>
              <div class="link-buttons-group">
                <%= image_tag('fb-icon.png', class: 'facebook-button-icon') %>
                <%= link_to 'Login com Facebook', '/auth/facebook/', class: 'mdl-button mdl-js-button link-facebook-btn mdl-button--raised mdl-js-ripple-effect' %>
                <%= image_tag('gp-icon.png', class: 'google-button-icon') %>
                <%= link_to 'Login com Google+', '/auth/google_oauth2/', class: 'mdl-button mdl-js-button link-google-btn mdl-button--raised mdl-js-ripple-effect' %>
              </div>
              <br>
              <div class="error-list">
                <ul class="error-message" id="error-message"></ul>
              </div>
              <%= submit_tag 'Salvar Dados', type: 'submit', data: { disable_with: false }, class: 'mdl-button mdl-js-button save-data-btn mdl-button--colored mdl-button--raised mdl-js-ripple-effect', id: 'profile-btn' %>
            </div>
          </form>
        </div>
      </main>
    </div>
  </div>
</div>
<script type="text/javascript" defer>
  const form = document.querySelector(".app-profile");
  const fullnameField = document.querySelector("#profile-fullname")
  const usernameField  = document.querySelector("#profile-username");
  const numberField = document.querySelector("#profile-number");
  const emailField = document.querySelector("#profile-email");
  const passwordField = document.querySelector("#profile-password");
  const passwordConfirmationField = document.querySelector("#profile-password2");
  const errorMessage = document.querySelector('.error-message');

    form.addEventListener('submit', (event) => {
    event.preventDefault();
    validateProfileForm();
    if (errorList.length > 0) {
      showErrorMessage(errorList);
      return;
    }
  });

    function validateProfileForm(form) {
      errorList = [];
      errorMessage.innerHTML = "";

      if (!validateName(fullnameField.value)) errorList.push('Preencha esse campo com nome composto válido.');
      if (!validateUsername(usernameField.value)) errorList.push('Preencha esse campo com nome de usuário válido.');
      if (!validateNumber(numberField.value)) errorList.push('Preencha esse campo com um número de CNPJ ou CPF válido.');
      if (!validateEmail(emailField.value)) errorList.push('Preencha esse campo com e-mail válido.');
      if (!validatePassword(passwordField.value)) errorList.push('Preencha esse campo com senha forte.');
      if (!validatePasswordConfirmation(passwordConfirmationField.value)) errorList.push('Preencha esse campo com senha forte.');
      if(passwordField.value !== passwordConfirmationField.value) errorList.push('As senhas não são iguais.');
    }

    function validateEmptyFields(field, fieldValue) {
      if (fieldValue === '') {
        errorList.push(`O campo de ${field} é de preenchimento obrigatório.`);
        return false;
      }
      return true;
    }

    /* Regex de nome que obrigada a escrita de primeira letra maiúscula, nome composto e que aceita acentuacao */
    function validateName(nameField) {
      if(validateEmptyFields('nome', nameField)) {
        const nameRegex = /^[A-ZÀ-Ÿ][A-zÀ-ÿ']+\s([A-zÀ-ÿ']\s?)*[A-ZÀ-Ÿ][A-zÀ-ÿ']+$/;
        return nameRegex.test(nameField);
      }
      return true;
    }

    /* Regex de nome de usuário de 2 à 20 caracteres */
    function validateUsername(usernameField) {
      if(validateEmptyFields('nome de usúario', usernameField)) {
        const usernameRegex = /^[a-zA-Z][a-zA-Z0-9-_\.]{1,20}$/;
        return usernameRegex.test(usernameField);
      }
      return true;
    }

    /* Regex de validação de CPF e CNPJ com cálculo do dígito verificador */
    function validateNumber(numberField) {
      if(validateEmptyFields('CNPJ ou CPF', numberField)) {
        const numberRegex = /^([0-9]{2}[\.]?[0-9]{3}[\.]?[0-9]{3}[\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\.]?[0-9]{3}[\.]?[0-9]{3}[-]?[0-9]{2})$/;
        return numberRegex.test(numberField);
      }
      return true;
    }

    /* Regex de email, identifica e-mail incompleto terminado por nome, ponto e arroba */
    function validateEmail(emailField) {
      if(validateEmptyFields('e-mail', emailField)) {
        const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
        return emailRegex.test(String(emailField).toLowerCase());
      }
      return true;
    }

    /* Regex de senha forte de no mínimo 8 caracteres, com ao menos um dígito, letra mínuscula, letra maiúscula e caractere especial */
    function validatePassword(passwordField) {
      if(validateEmptyFields('senha', passwordField)) {
        const passwordRegex = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[$*&@#])[0-9a-zA-Z$*&@#]{8,}$/;
        return passwordRegex.test(passwordField);
      }
      return true;
    }

    /* Regex de senha forte de no mínimo 8 caracteres, com ao menos um dígito, letra mínuscula, letra maiúscula e caractere especial */
    function validatePasswordConfirmation(passwordConfirmationField) {
      if(validateEmptyFields('confirmação de senha', passwordConfirmationField)) {
        const passwordRegex = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[$*&@#])[0-9a-zA-Z$*&@#]{8,}$/;
        return passwordRegex.test(passwordConfirmationField);
      }
      return true;
    }

    function showErrorMessage(errorList) {
        const ul = document.querySelector(".error-message");
        ul.innerHTML = '';
        errorList.forEach(function(error){
          const li = document.createElement("li");
          li.textContent = error;
          ul.appendChild(li);
        })
    }
</script> 